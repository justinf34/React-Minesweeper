{"version":3,"sources":["Components/Header.js","Components/Cell.js","Components/GameOver.js","utils/game-engine.js","Components/Board.js","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","select","width","Header","props","classes","useState","seconds","setSeconds","useEffect","interval","start","setInterval","clearInterval","setTime","className","Select","value","diff","variant","onChange","event","onDiffChange","target","MenuItem","id","flags","Cell","handleButtonPress","bind","handleButtonRelease","rightClick","flag","e","nativeEvent","which","this","buttonPressTimer","setTimeout","console","log","mark","y","x","clearTimeout","uncover","preventDefault","type","val","Number","getClass","onMouseDown","onMouseUp","onTouchStart","onTouchEnd","onContextMenu","Component","GameOver","open","game_state","time_elapsed","num_flags","onClose","Dialog","aria-labelledby","disableBackdropClick","disableEscapeKeyDown","DialogTitle","List","ListItem","key","ListItemAvatar","Avatar","ListItemText","primary","DialogActions","Button","onClick","MSGame","rndInt","min","max","Math","ceil","floor","random","init","row","col","nrows","ncols","nmines","nmarked","nuncovered","exploded","arr","res","array2d","mine","state","count","r","c","dr","dc","validCoord","allowed","abs","push","length","i","j","mines","s","toString","join","sprinkleMines","ff","a","done","Board","game","timer","handleClose","board","map","split","getRendering","checkStatus","first_move","getStatus","setState","new_game","initBoard","time","prevProps","gameStatus","Fragment","changeDifficulty","toLowerCase","renderBoard","App","difficulty","newDifficulty","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.2812b7fc.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport AccessAlarmIcon from \"@material-ui/icons/AccessAlarm\";\nimport FlagIcon from \"@material-ui/icons/Flag\";\nimport { makeStyles, MenuItem, Select } from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n  select: {\n    width: \"6rem\",\n  },\n}));\n\nexport default function Header(props) {\n  const classes = useStyles();\n  const [seconds, setSeconds] = useState(0);\n\n  const handleDiffChange = (event) => {\n    props.onDiffChange(event.target.value);\n  };\n\n  useEffect(() => {\n    let interval = null;\n    if (props.start) {\n      interval = setInterval(() => {\n        setSeconds((seconds) => seconds + 1);\n      }, 1000);\n    } else if (!props.start && seconds !== 0) {\n      clearInterval(interval);\n      props.setTime(seconds);\n      setSeconds(0);\n    }\n    return () => {\n      clearInterval(interval);\n    };\n  }, [seconds, props.start]);\n\n  return (\n    <div className=\"header\">\n      <Select\n        value={props.diff}\n        variant=\"outlined\"\n        onChange={handleDiffChange}\n        classes={{\n          select: classes.select,\n        }}\n      >\n        <MenuItem value=\"Easy\">Easy</MenuItem>\n        <MenuItem value=\"Medium\">Medium</MenuItem>\n      </Select>\n      <div className=\"flag-container\">\n        <span id=\"flag-logo\">\n          <FlagIcon />\n        </span>\n        <span id=\"flag-counter\">{props.flags}</span>\n      </div>\n      <div className=\"timer-container\">\n        <span id=\"clock-logo\">\n          <AccessAlarmIcon />\n        </span>{\" \"}\n        <span id=\"time\">{seconds}</span>\n      </div>\n    </div>\n  );\n}\n","import React, { Component } from \"react\";\n\n/**\n * Cell components that represent a tile in the board.\n * Can be interacted with by right-clicking and\n * left-clicking it. Holding it the left-click and\n * right-clicking does the same function\n *\n * src: https://stackoverflow.com/questions/48048957/react-long-press-event\n */\nexport default class Cell extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleButtonPress = this.handleButtonPress.bind(this);\n    this.handleButtonRelease = this.handleButtonRelease.bind(this);\n    this.rightClick = this.rightClick.bind(this);\n\n    this.flag = false;\n  }\n\n  handleButtonPress(e) {\n    if (e.nativeEvent.which === 1) {\n      this.flag = true;\n      this.buttonPressTimer = setTimeout(() => {\n        this.flag = false;\n        console.log(\"long press activated \");\n        this.props.mark(this.props.y, this.props.x);\n      }, 1500);\n    }\n  }\n\n  handleButtonRelease(e) {\n    if (e.nativeEvent.which === 1) {\n      clearTimeout(this.buttonPressTimer);\n      if (this.flag) {\n        console.log(\"Not long enough...\");\n        this.props.uncover(this.props.y, this.props.x);\n        this.flag = false;\n      }\n      console.log(\"Log hold stopped\");\n    }\n  }\n\n  rightClick(e) {\n    e.preventDefault();\n    console.log(e.type);\n    console.log(\"Putting flag...\");\n    this.props.mark(this.props.y, this.props.x);\n  }\n\n  getClass() {\n    switch (this.props.val) {\n      case \"H\":\n        return \"\";\n      case \"F\":\n        return \"flag\";\n      case \"M\":\n        return \"bomb\";\n      default:\n        if (Number(this.props.val) == 0) {\n          return \"opened\";\n        } else {\n          return \"opened\" + \" \" + \"mine\" + this.props.val;\n        }\n    }\n  }\n\n  render() {\n    return (\n      <div\n        className={\"cell\" + \" \" + this.getClass()}\n        onMouseDown={this.handleButtonPress}\n        onMouseUp={this.handleButtonRelease}\n        onTouchStart={this.handleButtonPress}\n        onTouchEnd={this.handleButtonRelease}\n        onContextMenu={this.rightClick}\n      ></div>\n    );\n  }\n}\n","import React from \"react\";\nimport {\n  Avatar,\n  Button,\n  Dialog,\n  DialogActions,\n  DialogTitle,\n  List,\n  ListItem,\n  ListItemAvatar,\n  ListItemText,\n} from \"@material-ui/core\";\nimport FlagIcon from \"@material-ui/icons/Flag\";\nimport TimerIcon from \"@material-ui/icons/Timer\";\n\nexport default function GameOver(props) {\n  const { open, game_state, time_elapsed, num_flags, onClose } = props;\n\n  const getTitle = () => {\n    if (game_state) {\n      return \"You Won!\";\n    } else {\n      return \"Game Over!\";\n    }\n  };\n\n  return (\n    <Dialog\n      onClose={onClose}\n      open={open}\n      aria-labelledby=\"game-over-dialog-title\"\n      disableBackdropClick\n      disableEscapeKeyDown\n    >\n      <DialogTitle id=\"game-over-dialog-title\">{getTitle()}</DialogTitle>\n      <List>\n        <ListItem key={0}>\n          <ListItemAvatar>\n            <Avatar>\n              <FlagIcon />\n            </Avatar>\n          </ListItemAvatar>\n          <ListItemText primary={num_flags} />\n        </ListItem>\n\n        <ListItem key={1}>\n          <ListItemAvatar>\n            <Avatar>\n              <TimerIcon />\n            </Avatar>\n          </ListItemAvatar>\n          <ListItemText primary={time_elapsed} />\n        </ListItem>\n      </List>\n      <DialogActions>\n        <Button onClick={onClose}>Play Again</Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n","\"use strict\";\n\nlet MSGame = (function () {\n  // private constants\n  const STATE_HIDDEN = \"hidden\";\n  const STATE_SHOWN = \"shown\";\n  const STATE_MARKED = \"marked\";\n\n  function array2d(nrows, ncols, val) {\n    const res = [];\n    for (let row = 0; row < nrows; row++) {\n      res[row] = [];\n      for (let col = 0; col < ncols; col++) res[row][col] = val(row, col);\n    }\n    return res;\n  }\n\n  // returns random integer in range [min, max]\n  function rndInt(min, max) {\n    [min, max] = [Math.ceil(min), Math.floor(max)];\n    return min + Math.floor(Math.random() * (max - min + 1));\n  }\n\n  class _MSGame {\n    constructor() {\n      this.init(8, 10, 10); // easy\n    }\n\n    validCoord(row, col) {\n      return row >= 0 && row < this.nrows && col >= 0 && col < this.ncols;\n    }\n\n    init(nrows, ncols, nmines) {\n      this.nrows = nrows;\n      this.ncols = ncols;\n      this.nmines = nmines;\n      this.nmarked = 0;\n      this.nuncovered = 0;\n      this.exploded = false;\n      // create an array\n      this.arr = array2d(nrows, ncols, () => ({\n        mine: false,\n        state: STATE_HIDDEN,\n        count: 0,\n      }));\n    }\n\n    count(row, col) {\n      const c = (r, c) =>\n        this.validCoord(r, c) && this.arr[r][c].mine ? 1 : 0;\n      let res = 0;\n      for (let dr = -1; dr <= 1; dr++)\n        for (let dc = -1; dc <= 1; dc++) res += c(row + dr, col + dc);\n      return res;\n    }\n    sprinkleMines(row, col) {\n      // prepare a list of allowed coordinates for mine placement\n      let allowed = [];\n      for (let r = 0; r < this.nrows; r++) {\n        for (let c = 0; c < this.ncols; c++) {\n          if (Math.abs(row - r) > 2 || Math.abs(col - c) > 2)\n            allowed.push([r, c]);\n        }\n      }\n      this.nmines = Math.min(this.nmines, allowed.length);\n      for (let i = 0; i < this.nmines; i++) {\n        let j = rndInt(i, allowed.length - 1);\n        [allowed[i], allowed[j]] = [allowed[j], allowed[i]];\n        let [r, c] = allowed[i];\n        this.arr[r][c].mine = true;\n      }\n      // erase any marks (in case user placed them) and update counts\n      for (let r = 0; r < this.nrows; r++) {\n        for (let c = 0; c < this.ncols; c++) {\n          if (this.arr[r][c].state == STATE_MARKED)\n            this.arr[r][c].state = STATE_HIDDEN;\n          this.arr[r][c].count = this.count(r, c);\n        }\n      }\n      let mines = [];\n      let counts = [];\n      for (let row = 0; row < this.nrows; row++) {\n        let s = \"\";\n        for (let col = 0; col < this.ncols; col++) {\n          s += this.arr[row][col].mine ? \"B\" : \".\";\n        }\n        s += \"  |  \";\n        for (let col = 0; col < this.ncols; col++) {\n          s += this.arr[row][col].count.toString();\n        }\n        mines[row] = s;\n      }\n      console.log(\"Mines and counts after sprinkling:\");\n      console.log(mines.join(\"\\n\"), \"\\n\");\n    }\n    // uncovers a cell at a given coordinate\n    // this is the 'left-click' functionality\n    uncover(row, col) {\n      console.log(\"uncover\", row, col);\n      // if coordinates invalid, refuse this request\n      if (!this.validCoord(row, col)) return false;\n      // if this is the very first move, populate the mines, but make\n      // sure the current cell does not get a mine\n      if (this.nuncovered === 0) {\n        this.nmarked = 0;\n        this.sprinkleMines(row, col);\n      }\n      // if cell is not hidden, ignore this move\n      if (this.arr[row][col].state !== STATE_HIDDEN) return false;\n      // floodfill all 0-count cells\n      const ff = (r, c) => {\n        if (!this.validCoord(r, c)) return;\n        if (this.arr[r][c].state !== STATE_HIDDEN) return;\n        this.arr[r][c].state = STATE_SHOWN;\n        this.nuncovered++;\n        if (this.arr[r][c].count !== 0) return;\n        ff(r - 1, c - 1);\n        ff(r - 1, c);\n        ff(r - 1, c + 1);\n        ff(r, c - 1);\n        ff(r, c + 1);\n        ff(r + 1, c - 1);\n        ff(r + 1, c);\n        ff(r + 1, c + 1);\n      };\n      ff(row, col);\n      // have we hit a mine?\n      if (this.arr[row][col].mine) {\n        this.exploded = true;\n      }\n      return true;\n    }\n    // puts a flag on a cell\n    // this is the 'right-click' or 'long-tap' functionality\n    mark(row, col) {\n      console.log(\"mark\", row, col);\n      // if coordinates invalid, refuse this request\n      if (!this.validCoord(row, col)) return false;\n      // if cell already uncovered, refuse this\n      console.log(\"marking previous state=\", this.arr[row][col].state);\n      if (this.arr[row][col].state === STATE_SHOWN) return false;\n      // accept the move and flip the marked status\n      this.nmarked += this.arr[row][col].state == STATE_MARKED ? -1 : 1;\n      this.arr[row][col].state =\n        this.arr[row][col].state == STATE_MARKED ? STATE_HIDDEN : STATE_MARKED;\n      return true;\n    }\n    // returns array of strings representing the rendering of the board\n    //      \"H\" = hidden cell - no bomb\n    //      \"F\" = hidden cell with a mark / flag\n    //      \"M\" = uncovered mine (game should be over now)\n    // '0'..'9' = number of mines in adjacent cells\n    getRendering() {\n      const res = [];\n      for (let row = 0; row < this.nrows; row++) {\n        let s = \"\";\n        for (let col = 0; col < this.ncols; col++) {\n          let a = this.arr[row][col];\n          if (this.exploded && a.mine) s += \"M\";\n          else if (a.state === STATE_HIDDEN) s += \"H\";\n          else if (a.state === STATE_MARKED) s += \"F\";\n          else if (a.mine) s += \"M\";\n          else s += a.count.toString();\n        }\n        res[row] = s;\n      }\n      return res;\n    }\n    getStatus() {\n      let done =\n        this.exploded ||\n        this.nuncovered === this.nrows * this.ncols - this.nmines;\n      return {\n        done: done,\n        exploded: this.exploded,\n        nrows: this.nrows,\n        ncols: this.ncols,\n        nmarked: this.nmarked,\n        nuncovered: this.nuncovered,\n        nmines: this.nmines,\n      };\n    }\n  }\n\n  return _MSGame;\n})();\n\nexport default MSGame;\n","import React, { Component } from \"react\";\nimport Cell from \"./Cell\";\nimport GameOver from \"./GameOver\";\nimport Header from \"./Header\";\nimport MSGame from \"../utils/game-engine\";\n\nexport default class Board extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      game: new MSGame(),\n      open: false,\n      flags: 10,\n      start: false,\n      timer: 0,\n    };\n\n    this.uncover = this.uncover.bind(this);\n    this.mark = this.mark.bind(this);\n    this.handleClose = this.handleClose.bind(this);\n    this.setTime = this.setTime.bind(this);\n  }\n\n  renderBoard(board) {\n    return board.map((row, y) => {\n      return row.split(\"\").map((col, x) => {\n        return (\n          <Cell\n            val={col}\n            key={x + \",\" + y}\n            x={x}\n            y={y}\n            uncover={this.uncover}\n            mark={this.mark}\n          />\n        );\n      });\n    });\n  }\n\n  uncover(row, col) {\n    if (this.state.game.uncover(row, col)) {\n      console.log(\n        \"After uncovering (\",\n        row,\n        col,\n        \")\\n\",\n        this.state.game.getRendering().join(\"\\n\")\n      );\n      if (!this.state.start) {\n        this.checkStatus(true);\n      } else {\n        this.checkStatus(false);\n      }\n    }\n  }\n\n  mark(row, col) {\n    if (this.state.game.mark(row, col)) {\n      console.log(\n        \"After marking (\",\n        row,\n        col,\n        \")\\n\",\n        this.state.game.getRendering().join(\"\\n\")\n      );\n      this.checkStatus(false);\n    }\n  }\n\n  checkStatus(first_move) {\n    const gameStat = this.state.game.getStatus();\n    if (gameStat.done) {\n      this.setState((state, props) => {\n        return { open: true, start: false };\n      });\n    } else {\n      if (first_move) {\n        console.log(\"first move\");\n        this.setState({ start: true });\n      } else {\n        this.setState({});\n      }\n    }\n  }\n\n  initBoard() {\n    const new_game = new MSGame();\n    let x, y, mines;\n    console.log(this.props.diff);\n    if (this.props.diff === \"Easy\") {\n      x = 8;\n      y = 10;\n      mines = 10;\n    } else {\n      x = 14;\n      y = 18;\n      mines = 40;\n    }\n    new_game.init(x, y, mines);\n\n    console.log(\"Start of game: \\n\", new_game.getRendering().join(\"\\n\"));\n\n    this.setState((state, props) => {\n      return {\n        game: new_game,\n        open: !state,\n        flags: mines,\n        start: false,\n        timer: 0,\n      };\n    });\n  }\n\n  handleClose() {\n    console.log(\"Closing dialog...\");\n    this.initBoard();\n  }\n\n  setTime(time) {\n    this.setState((state, props) => {\n      return { timer: time };\n    });\n  }\n\n  componentDidMount() {\n    this.initBoard();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.diff !== this.props.diff) {\n      console.log(\"Difficulty changed\");\n      this.initBoard();\n    }\n  }\n\n  render() {\n    const { game } = this.state;\n    const gameStatus = game.getStatus();\n    return (\n      <React.Fragment>\n        <Header\n          diff={this.props.diff}\n          onDiffChange={this.props.changeDifficulty}\n          flags={this.state.flags - gameStatus.nmarked}\n          start={this.state.start}\n          setTime={this.setTime}\n        />\n        <div className=\"gridwrapper\">\n          <div className={\"grid\" + \" \" + this.props.diff.toLowerCase()}>\n            {this.renderBoard(game.getRendering())}\n          </div>\n          <GameOver\n            open={this.state.open}\n            game_state={\n              gameStatus.nuncovered ===\n              gameStatus.nrows * gameStatus.ncols - gameStatus.nmines\n            }\n            time_elapsed={this.state.timer}\n            num_flags={gameStatus.nmarked}\n            onClose={this.handleClose}\n          />\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport Header from \"./Components/Header\";\nimport Board from \"./Components/Board\";\n\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      difficulty: \"Easy\",\n    };\n\n    this.changeDifficulty = this.changeDifficulty.bind(this);\n  }\n\n  changeDifficulty(newDifficulty) {\n    this.setState({\n      difficulty: newDifficulty,\n    });\n  }\n\n  render() {\n    return (\n      <Board\n        diff={this.state.difficulty}\n        changeDifficulty={this.changeDifficulty}\n      ></Board>\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}